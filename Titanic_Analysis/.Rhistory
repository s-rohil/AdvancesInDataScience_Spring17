install packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
library("xlsx")
getwd()
load_excel<-function(file){
new_data<-read.xlsx(file,sheetIndex = 1,,header=TRUE,as.data.frame=TRUE)
result<-data[(data$Age>30 & data$Job_status=='unemploye'),]
{
write.xlsx(result,file,sheetName = "Sheet2",col.names=TRUE, row.names=TRUE,append = TRUE)
}
}
my_function
source('~/.active-rstudio-document')
my_function()
source('~/.active-rstudio-document')
my_function()
source('~/.active-rstudio-document')
my_function()
args
source('~/.active-rstudio-document')
my_function()
source('~/.active-rstudio-document')
my_function()
source('~/.active-rstudio-document')
my_function()
source('~/.active-rstudio-document')
my_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
View(load_excel)
View(load_excel)
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
file=file.choose()
loan=read.xlsx(file.path(file),sheetIndex = 1,HEADER=TRUE)
Res_status = as.factor(loan$Res_status)
Res_status
loan$Res_status
class(loan$Res_status)
class(loan$Occupation)
Res_status = as.factor(loan$Res_status)
Occupation = as.factor(loan$Occupation)
Job_status = as.factor(loan$Job_status)
Liab_ref   = as.factor(loan$Liab_ref)
Acc_ref    = as.factor(loan$Acc_ref)
Decision   = as.factor(loan$Decision)
contrasts(Res_status)
contrasts(Res_status)
contrasts(Occupation)
contrasts(Job_status)
contrasts(Liab_ref)
contrasts(Acc_ref)
contrasts(Decision)
x = data.frame(Res_status,Occupation,Job_status,Liab_ref,Acc_ref)
x
loan
x
loan.fit = glm( Decision ~ Res_status + Occupation+Job_status+Liab_ref+Acc_ref,family = "binomial", data = x )
loan.fit
summary(loan.fit)
loan
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
my_function()
summary(loan.fit)
newdata1= data.frame(Res_status="owner" ,Occupation="creative_",Job_status="governmen" ,Liab_ref="f" ,Acc_ref="given" )
predict(loan.fit,newdata1,type ="response" )
newdata2= data.frame(Res_status="rent" ,Occupation="creative_",Job_status="governmen" ,Liab_ref="f" ,Acc_ref="given" )
predict(loan.fit,newdata2,type ="response" )
rep(1:4, each = 2)
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
new_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
new_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
new_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
new_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
new_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
new_function()
clr
clear()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
logistic_reg()
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
install.packages(ROCR)
install.packages("ROCR")
library(ROCR)
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2.R')
logistic_reg()
FILE <- file.choose() #choosing the file
args<-read.xlsx(file.path(FILE),sheetIndex = 1,header=TRUE)
args
a<-matrix(rep(1,17),nrow = 17,ncol = 1)
b<-matrix(args$Factor.1,nrow = 17,ncol = 1)
c<-matrix(args$Factor.2,nrow = 17,ncol = 1)
X<-cbind(a,b,c) #column binding 17:1 matrix to 17:3 matrix from the data in excel file
X
Y<-matrix(args$Yield,nrow = 17,ncol = 1) #matrix form of the response variable values
Y
t.X<-t(X) # taking the transpose of the X matrix for calculation
t.X
beta<-solve((t.X)%*%X)%*%(t.X)%*%Y #finding the regression coefficients
beta
H<-X%*%solve((t.X%*%X))%*%t.X #calculating the hat.matrix
H
J<-matrix(rep(1),nrow = 17,ncol = 17)
SSR<-t(Y)%*%(H-(J/17))%*%Y #calculating regression sum of squares or the square of residuals
MSR<-SSR/2 #calculating mean square of residuals by dividing SSR with degree of freedom or the no. of predictor variables
MSR
I<-diag(nrow = 17,ncol = 17) #identity matrix of 17x17
SSE<-t(Y)%*%(I-H)%*%Y # calculating the sum of square of standard error
MSE=SSE/14 # calculating the Mean Square of Standard error. denom=dof=(n-k-1);k is the no.of predictors
MSE
F0<-MSR/MSE #calculating the f statistic
F0
return (F0)
my_function<-function(){ #if choosing, then no arguments needed
FILE <- file.choose() #choosing the file
#dir<-dirname(FILE) #getting the path of the selected file
args<-read.xlsx(file.path(FILE),sheetIndex = 1,header=TRUE)
#file.path(dir,FILE) #instead of the above file.path()
a<-matrix(rep(1,17),nrow = 17,ncol = 1)
b<-matrix(args$Factor.1,nrow = 17,ncol = 1)
c<-matrix(args$Factor.2,nrow = 17,ncol = 1)
X<-cbind(a,b,c) #column binding 17:1 matrix to 17:3 matrix from the data in excel file
Y<-matrix(args$Yield,nrow = 17,ncol = 1) #matrix form of the response variable values
t.X<-t(X) # taking the transpose of the X matrix for calculation
beta<-solve((t.X)%*%X)%*%(t.X)%*%Y #finding the regression coefficients
H<-X%*%solve((t.X%*%X))%*%t.X #calculating the hat.matrix
J<-matrix(rep(1),nrow = 17,ncol = 17)
SSR<-t(Y)%*%(H-(J/17))%*%Y #calculating regression sum of squares or the square of residuals
MSR<-SSR/2 #calculating mean square of residuals by dividing SSR with degree of freedom or the no. of predictor variables
I<-diag(nrow = 17,ncol = 17) #identity matrix of 17x17
SSE<-t(Y)%*%(I-H)%*%Y # calculating the sum of square of standard error
MSE=SSE/14 # calculating the Mean Square of Standard error. denom=dof=(n-k-1);k is the no.of predictors
F0<-MSR/MSE #calculating the f statistic
return (F0)
}
new_function<-function(){
file<-file.choose()
new.args<-read.xlsx(file.path(file),sheetIndex = 1,header=TRUE)
factor1<-new.args$Factor.1
factor2<-new.args$Factor.2
yield<-new.args$Yield
# print(class(factor1))
# print(class(factor2))
output.data<-data.frame(factor1,factor2)
test<-lm(formula = yield ~ factor1 + factor2,data = output.data,interval="confidence",level=0.90)
#print(test)
print(summary(test))
}
source('~/Desktop/Advances_Data_Science/Assignment-2/q1.R')
new_function()
file<-file.choose()
new_function()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
print("rohil"+123)
print("rohil":123)
print("rohil"123)
print("rohil" 123)
print("rohil",123)
print(paste0("rohil",123))
print(paste0("rohil:",123))
print(paste("rohil:",123))
source('~/Desktop/Advances_Data_Science/Assignment-2/q2_new.R')
logistic_reg()
View(new_function)
x=[1,2,3,4,5,6,7,8]
x=(1,2,3,4,5,6,7,8)
x<-(1,2,3,4,5,6,7,8)
x<-c(1,2,3,4,5,6,7,8)
x[-1]
x[-1,]
x <- 1:12
# a random permutation
sample(x)
# bootstrap resampling -- only if length(x) > 1 !
sample(x, replace = TRUE)
x[-1]
x[,-1]
A[1,]
B[1,c(2,3)]
B[,-1]
B[1,c(2,3)]
+B[,-1]
